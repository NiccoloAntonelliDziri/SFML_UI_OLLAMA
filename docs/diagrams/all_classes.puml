@startuml
abstract "State" as C_0001914138303902600425
abstract C_0001914138303902600425 {
+State() : void
..
{abstract} +draw(float dt) = 0 : void
{abstract} +handleInput() = 0 : void
{abstract} +init() = 0 : void
+pause() : void
+resume() : void
{abstract} +update(float dt) = 0 : void
__
}
class "StateMachine" as C_0013531716651485178890
class C_0013531716651485178890 {
+StateMachine() = default : void
+~StateMachine() = default : void
..
+GetActiveState() : StateRef &
+ProcessStateChanges() : void
+addState(StateRef newState, bool isReplacing = true) : void
+removeState() : void
__
-isadding : bool
-isremoving : bool
-isreplacing : bool
-newstate : StateRef
-states : std::stack<StateRef>
}
class "AssetManager" as C_0007056669967416308786
class C_0007056669967416308786 {
+AssetManager() = default : void
+~AssetManager() = default : void
..
+getFont(std::string name) : sf::Font &
+getTexture(std::string name) : sf::Texture &
+loadFont(std::string name, std::string filename) : void
+loadSound(std::string name, std::string filename) : void
+loadTexture(std::string name, std::string filename) : void
+play(std::string name) : void
+setSpriteTransparency(sf::Sprite & sprite, sf::Uint8 alpha = 255) : void
+setTextStyle(sf::Text & t, unsigned int characterSize = 24, const sf::Color & color = sf::Color::Black, sf::Uint32 style = sf::Text::Regular, const sf::Color & outlineColor = sf::Color::Black, float outlineThickness = 1.0f) : void
+setTextureSmooth(std::string name, bool smooth) : void
__
-fonts : std::map<std::string,sf::Font>
-soundbuffer : std::map<std::string,sf::SoundBuffer>
-sounds : std::map<std::string,sf::Sound>
-textures : std::map<std::string,sf::Texture>
}
class "nlohmann::adl_serializer" as C_0008758017994193186544
class C_0008758017994193186544 {
{static} +from_json(const json & j, sf::Color & color) : void
{static} +to_json(json & j, const sf::Color & color) : void
__
}
class "nlohmann::adl_serializer<sf::Color,void>" as C_0006027996033599488936
class C_0006027996033599488936 {
{static} +from_json(const json & j, sf::Color & color) : void
{static} +to_json(json & j, const sf::Color & color) : void
__
}
class "Constants" as C_0015731897903105408204
class C_0015731897903105408204 {
+Constants(std::string path) : void
..
+operator[](std::string key) const : std::string
..
+get<T=std::string>(std::string key) const : T
__
+j : json
}
class "InputManager" as C_0011218267209626974551
class C_0011218267209626974551 {
+InputManager() = default : void
+~InputManager() = default : void
..
+getMousePosition(sf::RenderWindow & window) const : sf::Vector2i
+isMouseClickedInArea(sf::IntRect area, sf::Mouse::Button button, sf::Event & event, sf::RenderWindow) : bool
+isSpriteClicked(sf::Sprite sprite, sf::Mouse::Button button, sf::Event & event, sf::RenderWindow & window) : bool
+isWindowClosed(sf::Event & event) : bool
__
-lockMouseClicked : bool
}
enum "MusicStatus" as C_0008159535231821289035
enum C_0008159535231821289035 {
Stopped
Paused
Playing
NotExisting
}
class "MusicManager" as C_0013018981818162392349
class C_0013018981818162392349 {
+MusicManager() : void
+~MusicManager() = default : void
..
+enableLoop(bool enable) : void
+isMuted() : bool
+isPlaying() const : bool
+mute() : void
+openMusic(std::string filepath) : void
+play() : void
+setVolume(float volume) : void
+unMute() : void
__
-isMusicMuted : bool
-music : sf::Music
-status : MusicStatus
-volume : float
}
class "AppData" as C_0002878685250157375085
class C_0002878685250157375085 {
__
+assets : AssetManager
+input : InputManager
+machine : StateMachine
+messages : ollama::messages
+music : MusicManager
+window : sf::RenderWindow
}
class "App" as C_0018282610363821501524
class C_0018282610363821501524 {
+App(int width, int height, std::string title) : void
+~App() : void
..
-run() : void
__
-clock : sf::Clock
-data : AppDataRef
-dt : const float
}
class "SettingsState" as C_0007275061059561579929
class C_0007275061059561579929 {
+SettingsState(AppDataRef data) : void
+~SettingsState() = default : void
..
+draw(float dt) : void
+handleInput() : void
+init() : void
+update(float dt) : void
__
-data : AppDataRef
}
class "MultilineText" as C_0006075958540417117804
class C_0006075958540417117804 {
+MultilineText() = default : void
+MultilineText(sf::Font & font) : void
+~MultilineText() = default : void
..
+addChar(char c) : void
-draw(sf::RenderTarget & target, sf::RenderStates states) const : void
__
-box : sf::RectangleShape
-color : sf::Color
-font : sf::Font
-fontSize : int
-interlinesSpace : int
-lineLimit : int
-lines : std::vector<sf::Text>
-text : std::string
-textLines : std::vector<std::string>
}
class "TextBox" as C_0011459977689909642407
class C_0011459977689909642407 {
+TextBox() = default : void
+TextBox(int size, sf::Vector2f boxSize, sf::Color color, bool selected) : void
..
+addLine() : void
-deleteLastChar() : void
+draw(sf::RenderWindow & window) : void
+getLimit() : int
+getText() : std::string
-inputLogic(int charType) : void
+reset() : void
+setFont(sf::Font & font) : void
+setLimit(bool tof) : void
+setLimit(bool tof, int lim) : void
+setPosition(sf::Vector2f pos) : void
+setSelected(bool selected) : void
+setSize(sf::Vector2f boxSize) : void
+typedOn(sf::Event input) : void
__
-box : sf::RectangleShape
-boxSize : sf::Vector2f
-color : sf::Color
-currentLine : int
-font : sf::Font
-hasLimit : bool
-isSelected : bool
-limit : int
-lines : std::vector<sf::Text>
-position : sf::Vector2f
-size : int
-text : std::ostringstream
-textLines : std::vector<std::ostringstream>
-textbox : sf::Text *
}
class "OllamaState" as C_0010767441053444769080
class C_0010767441053444769080 {
+OllamaState(AppDataRef data) : void
+~OllamaState() : void
..
+draw(float dt) : void
+handleInput() : void
+init() : void
+update(float dt) : void
__
-data : AppDataRef
-inputBox : MultilineText
-messages : ollama::messages
-ollamathread : std::thread *
-promptInput : std::string
-response_callback : std::function<void (const ollama::response &)>
-streamingCounter : unsigned int
-temp : std::string
}
C_0013531716651485178890 ..> C_0001914138303902600425
C_0006027996033599488936 ..|> C_0008758017994193186544
C_0013018981818162392349 o-- C_0008159535231821289035 : -status
C_0002878685250157375085 o-- C_0013531716651485178890 : +machine
C_0002878685250157375085 o-- C_0011218267209626974551 : +input
C_0002878685250157375085 o-- C_0007056669967416308786 : +assets
C_0002878685250157375085 o-- C_0013018981818162392349 : +music
C_0007275061059561579929 ..> C_0002878685250157375085
C_0001914138303902600425 <|-- C_0007275061059561579929

C_0010767441053444769080 ..> C_0002878685250157375085
C_0010767441053444769080 o-- C_0006075958540417117804 : -inputBox
C_0001914138303902600425 <|-- C_0010767441053444769080


'Generated with clang-uml, version 0.5.6
'LLVM version clang version 19.1.4 (Fedora 19.1.4-1.fc41)
@enduml
